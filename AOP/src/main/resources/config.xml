<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- TargetClass 등록 -->
    <bean id="targetClass" class="org.example.bean.TargetClass" />

    <!-- AspectClass 등록 -->
    <bean id="aspectClass" class="org.example.advice.AspectClass" />

    <!-- AOP 설정 -->
    <aop:config>
        <!-- 충고 등록 -->
        <aop:aspect ref="aspectClass">
            <!-- Pointcut 등록 -->
            <aop:pointcut id="point" expression="execution(* org.example.bean.TargetClass.*(..))"/>

            <!-- Before Advice 등록: 메서드 실행 전에 실행 -->
            <aop:before method="before" pointcut-ref="point"/>

            <!-- After Advice 등록: 메서드 실행 후에 실행 -->
            <aop:after method="after" pointcut-ref="point"/>

            <!-- Around Advice 등록: 메서드 실행 전후에 모두 실행 -->
            <aop:around method="around" pointcut-ref="point"/>

            <!-- After-Returning Advice 등록: 메서드가 정상적으로 종료된 후에 실행 -->
            <aop:after-returning method="afterReturning" pointcut-ref="point" returning="returnValue"/>
        </aop:aspect>
    </aop:config>

</beans>
